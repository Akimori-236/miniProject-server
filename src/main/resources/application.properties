sha256.secret=${SHA256_SECRET}

### LOCAL MYSQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/tfipproject
spring.datasource.username=${MYSQLUSER}
spring.datasource.password=${MYSQLPASSWORD}

### RAILWAY MYSQL (provided url is missing "jdbc:" so need set custom variable in railway)
# spring.datasource.url=${JDBC_URL}
# spring.datasource.username=${MYSQLUSER}
# spring.datasource.password=${MYSQLPASSWORD}
# spring.datasource.driver-class-name=com.mysql.jdbc.Driver

### GOOGLE OAUTH
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_SECRET}
# spring.main.allow-bean-definition-overriding=true
# spring.security.oauth2.client.registration.google.scope=openid,profile,email
# spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
# spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
# spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
# spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
